package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.78

import (
	"context"
	"fmt"
	"rxw1/product-svc/graph/model"
	"rxw1/product-svc/internal/logging"
)

// CreateTodo is the resolver for the createTodo field.
func (r *mutationResolver) CreateOrder(ctx context.Context, productID string, qty int32) (*model.Order, error) {
	ctx2 := logging.With(ctx, "productID", productID)
	logging.From(ctx2).Info("mutate create order")
	panic(fmt.Errorf("not implemented: CreateOrder - createOrder"))
}

// Todos is the resolver for the todos field.
func (r *queryResolver) ProductByID(ctx context.Context, productID string) (*model.Product, error) {
	ctx2 := logging.With(ctx, "productID", productID)
	logging.From(ctx2).Info("query product by id")
	panic(fmt.Errorf("not implemented: ProductByID - productByID"))
}

// Products is the resolver for the products field.
func (r *queryResolver) Products(ctx context.Context) ([]*model.Product, error) {
	ctx2 := logging.With(ctx)
	logging.From(ctx2).Info("query products")
	panic(fmt.Errorf("not implemented: Products - products"))
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
